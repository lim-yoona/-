#include<iostream>
using namespace std;
struct Box
{
	int number;//方格上面的数字 
	int HasMine;//是否有地雷，有为1，无为0 
};
struct Box array[1000][1000];
int Click(int x,int y,struct Box a[1000][1000],int n,int m)
{
	if(a[x][y].number>=0)
	return 0;
	if(a[x][y].HasMine==1)
	{
		cout<<"You lose"<<endl;
		return 1;
	}
	int counter=0;
	if((y-1>=0)&&a[x][y-1].HasMine==1)
	counter++;
	if((x-1>=0)&&(y-1>=0)&&a[x-1][y-1].HasMine==1)
	counter++;
	if((x-1>=0)&&a[x-1][y].HasMine==1)
	counter++;
	if((x-1>=0)&&(y+1<m)&&a[x-1][y+1].HasMine==1)
	counter++;
	if((y+1<m)&&a[x][y+1].HasMine==1)
	counter++;
	if((x+1<n)&&(y+1<m)&&a[x+1][y+1].HasMine==1)
	counter++;
	if((x+1<n)&&a[x+1][y].HasMine==1)
	counter++;
	if((x+1<n)&&(y-1>=0)&&a[x+1][y-1].HasMine==1)
	counter++;
	a[x][y].number=counter;
	if((y-1>=0)&&a[x][y-1].HasMine==1)
	Click(x,y-1,a[1000][1000]);
	if((x-1>=0)&&(y-1>=0)&&a[x-1][y-1].HasMine==1)
	Click(x-1,y-1,a);
	if((x-1>=0)&&a[x-1][y].HasMine==1)
	Click(x-1,y,a);
	if((x-1>=0)&&(y+1<m)&&a[x-1][y+1].HasMine==1)
	Click(x-1,y+1,a);
	if((y+1<m)&&a[x][y+1].HasMine==1)
	Click(x,y+1,a);
	if((x+1<n)&&(y+1<m)&&a[x+1][y+1].HasMine==1)
	Click(x+1,y+1,a);
	if((x+1<n)&&a[x+1][y].HasMine==1)
	Click(x+1,y,a);
	if((x+1<n)&&(y-1>=0)&&a[x+1][y-1].HasMine==1)
	Click(x+1,y-1,a);
}
bool IsWin(struct Box a[1000][1000],int n,int m)
{
	for(int x=0;x<n;x++)
	{
		for(int y=0;y<m;y++)
		{
			if(a[x][y].number<0&&a[x][y].HasMine==0)
			return false;
		}
	}
	cout<<"You win"<<endl;
	return true;
}
int main ()
{
	int n,m,k,l;
	cin>>n;
	cin>>m;
	cin>>k;
	cin>>l;
	for(int x=0;x<n;x++)
	{
		for(int y=0;y<m;y++)
		{
			array[x][y].number=-1;
			array[x][y].HasMine=0;
		}
	}
	for(int i=0;i<k;i++)
	{
		int x,y;
		cin>>x;
		cin>>y;
		array[x][y].HasMine=1;
	}
	for(int i=0;i<l;i++)
	{
		int x,y;
		cin>>x;
		cin>>y;
		int j;
		j=Click(x,y,array);
		if(j==1)
		return 0;
		if(IsWin(array,n,m))
		return 0;
	}
}